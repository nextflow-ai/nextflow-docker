#!/bin/bash
# ============================================================================
# SCRIPT: create-multiple-databases.sh
# M√î T·∫¢: Script ƒë·ªÉ t·∫°o nhi·ªÅu database trong PostgreSQL khi kh·ªüi t·∫°o container
# NG∆Ø·ªúI T·∫†O: NextFlow Team
# NG√ÄY T·∫†O: 03/06/2025
# ============================================================================

# D·ª´ng ngay n·∫øu c√≥ l·ªói x·∫£y ra
set -e

# ============================================================================
# C·∫§U H√åNH M·∫∂C ƒê·ªäNH
# ============================================================================
# ƒê·∫∑t gi√° tr·ªã m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng ƒë∆∞·ª£c cung c·∫•p qua bi·∫øn m√¥i tr∆∞·ªùng
: ${POSTGRES_USER:=nextflow}                     # T√™n ng∆∞·ªùi d√πng PostgreSQL m·∫∑c ƒë·ªãnh
: ${POSTGRES_PASSWORD:=nextflow@2025}           # M·∫≠t kh·∫©u m·∫∑c ƒë·ªãnh
: ${POSTGRES_DB:=nextflow}                      # Database ch√≠nh m·∫∑c ƒë·ªãnh
: ${POSTGRES_MULTIPLE_DATABASES:=nextflow_n8n,keycloak,gitlabhq_production}  # Danh s√°ch database c·∫ßn t·∫°o

# Xu·∫•t bi·∫øn m√¥i tr∆∞·ªùng PGPASSWORD ƒë·ªÉ s·ª≠ d·ª•ng v·ªõi l·ªánh psql
export PGPASSWORD="$POSTGRES_PASSWORD"

# ============================================================================
# HI·ªÇN TH·ªä TH√îNG TIN KH·ªûI T·∫†O
# ============================================================================
echo "========================================"
echo "B·∫ÆT ƒê·∫¶U KH·ªûI T·∫†O DATABASE"
echo "Th·ªùi gian: $(date)"
echo "----------------------------------------"
echo "Ng∆∞·ªùi d√πng: $POSTGRES_USER"
echo "Database ch√≠nh: $POSTGRES_DB"
echo "Danh s√°ch database b·ªï sung: ${POSTGRES_MULTIPLE_DATABASES:-Kh√¥ng c√≥}"
echo "========================================"

# ============================================================================
# H√ÄM T·∫†O DATABASE V√Ä C·∫§P QUY·ªÄN
# ============================================================================
create_database() {
    local dbname="$1"
    local username="$2"
    
    echo "ƒêang t·∫°o database: $dbname..."
    
    # T·∫°o database n·∫øu ch∆∞a t·ªìn t·∫°i
    psql -v ON_ERROR_STOP=1 --username "$username" --dbname "$POSTGRES_DB" <<-EOSQL
        -- T·∫°o database n·∫øu ch∆∞a t·ªìn t·∫°i
        CREATE DATABASE "$dbname" WITH OWNER = "$username" ENCODING = 'UTF8';
        
        -- K·∫øt n·ªëi ƒë·∫øn database m·ªõi t·∫°o
        \c "$dbname"
        
        -- T·∫°o extension ph·ªï bi·∫øn
        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        CREATE EXTENSION IF NOT EXISTS "pgcrypto";
        
        -- C·∫•p t·∫•t c·∫£ quy·ªÅn cho ng∆∞·ªùi d√πng
        GRANT ALL PRIVILEGES ON DATABASE "$dbname" TO "$username";
        
        -- C·∫•p quy·ªÅn cho schema public
        GRANT ALL ON SCHEMA public TO "$username";
        
        -- C·∫•p quy·ªÅn m·∫∑c ƒë·ªãnh cho c√°c b·∫£ng t∆∞∆°ng lai
        ALTER DEFAULT PRIVILEGES IN SCHEMA public 
        GRANT ALL ON TABLES TO "$username";
        
        -- C·∫•p quy·ªÅn cho c√°c sequence
        ALTER DEFAULT PRIVILEGES IN SCHEMA public 
        GRANT ALL ON SEQUENCES TO "$username";
        
        -- C·∫•p quy·ªÅn cho c√°c function
        ALTER DEFAULT PRIVILEGES IN SCHEMA public 
        GRANT ALL ON FUNCTIONS TO "$username";
        
        -- C·∫≠p nh·∫≠t collation version ƒë·ªÉ tr√°nh c·∫£nh b√°o
        ALTER DATABASE "$dbname" REFRESH COLLATION VERSION;
        
        -- Th√¥ng b√°o ho√†n th√†nh
        \echo "ƒê√£ t·∫°o v√† c·∫•u h√¨nh database: $dbname"
EOSQL
}

# ============================================================================
# CH·ªú POSTGRESQL S·∫¥N S√ÄNG
# ============================================================================
# Ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn PostgreSQL trong v√≤ng 60 gi√¢y
MAX_RETRIES=60
COUNTER=0

echo "ƒêang ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn PostgreSQL..."

while ! psql -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1" >/dev/null 2>&1; do
    COUNTER=$((COUNTER + 1))
    if [ $COUNTER -ge $MAX_RETRIES ]; then
        echo "L·ªñI: Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn PostgreSQL sau $MAX_RETRIES l·∫ßn th·ª≠"
        exit 1
    fi
    
    echo "ƒê·ª£i PostgreSQL kh·ªüi ƒë·ªông... ($COUNTER/$MAX_RETRIES)"
    sleep 1
done

echo "K·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn PostgreSQL!"

# ============================================================================
# T·∫†O C√ÅC DATABASE B·ªî SUNG
# ============================================================================
if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
    echo "ƒêANG T·∫†O C√ÅC DATABASE B·ªî SUNG..."
    
    # T√°ch danh s√°ch database b·∫±ng d·∫•u ph·∫©y v√† t·∫°o t·ª´ng c√°i
    IFS=',' read -ra databases <<< "$POSTGRES_MULTIPLE_DATABASES"
    
    # T·∫°o t·ª´ng database trong danh s√°ch
    for db in "${databases[@]}"; do
        # X√≥a kho·∫£ng tr·∫Øng th·ª´a
        db=$(echo "$db" | xargs)
        
        # Ch·ªâ t·∫°o database n·∫øu t√™n kh√¥ng r·ªóng
        if [ -n "$db" ]; then
            create_database "$db" "$POSTGRES_USER"
        fi
    done
    
    echo "‚úÖ ƒê√É T·∫†O TH√ÄNH C√îNG T·∫§T C·∫¢ DATABASE"
else
    echo "‚ÑπÔ∏è Kh√¥ng c√≥ database b·ªï sung n√†o c·∫ßn t·∫°o (POSTGRES_MULTIPLE_DATABASES tr·ªëng)"
fi

# ============================================================================
# KI·ªÇM TRA L·∫†I T·∫§T C·∫¢ DATABASE ƒê√É T·∫†O
# ============================================================================
echo "\nüîç DANH S√ÅCH DATABASE HI·ªÜN C√ì:"
psql -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "\l"

# ============================================================================
# K·∫æT TH√öC
# ============================================================================
echo "\n‚úÖ KH·ªûI T·∫†O DATABASE HO√ÄN T·∫§T V√ÄO L√öC: $(date)"
echo "========================================"

# Tho√°t v·ªõi m√£ th√†nh c√¥ng
exit 0
